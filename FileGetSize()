	

    MsgBox, % FileGetSize(A_Windir "\System32", "Auto", 2) ; Directory, Units, Decimals
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
     
    FileGetSize(subcomandname, countoroptionsorkeys, aditionalcommand) {
            IfNotExist, % subcomandname, return, "0 KB" ;si el archivo o carpeta a calcular el peso no existe, devolver 0KB
           
            if IsFile(subcomandname) ;si es archivo, entonces:
                    FileGetSize, PB, % subcomandname ;obtener peso en Bytes
     
            if IsFolder(subcomandname) ;si es carpeta, entonces:
                    Loop, % subcomandname "\*", 1, 1
                            if (A_index>=1)
                                    PB += %A_LoopFileSize% ;obtener peso en Bytes
                            else if not A_index
                                    return "0 KB"
           
            aditionalcommand := aditionalcommand = "" ? 0 : aditionalcommand ;automaticamente establecerlo en: 0
           
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "B") ;devuelve el resultado en Bytes
                    return, PB " Bytes"
           
                    PN := PB * 2              ;[PESO EN N (Nibble)]
                    PKB := PB / 1024     ;[PESO EN KB (KyloByte)]
                    PMB := PKB / 1024  ;[PESO EN MB (MegaByte)]
                    PGB := PMB / 1024 ;[PESO EN GB (GigaByte)]
                    PTB := PGB / 1024  ;[PESO EN TB (TeraByte)]
                    PPB := PTB / 1024  ;[PESO EN PB (PetaByte)]
                    PEB := PPB / 1024  ;[PESO EN EB (ExaByte)]
                    PZB := PZB / 1024  ;[PESO EN ZB (ZettaByte]
                    PYB := PYB / 1024  ;[PESO EN YB (YottaByte)]
                   
                    if (PB >= 1024) ;si el peso en bytes es mayor o igual a 1024, entonces:
                    {
                            PB1 := Round(PB / 1024) ;[PESO EN KB]
                            PB := Round(PB / 1024, aditionalcommand) "KB" ;obtener peso en KiloByte
                            if (PB1 >= 1024) ;si el peso en kilobyte es mayor o igual a 1024, entonces:
                            {
                                    PB2 := Round(PB1 / 1024) ;[PESO EN MB]
                                    PB := Round(PB1 / 1024, aditionalcommand) "MB" ;obtener peso en MegaBytes
                            }
                            if (PB2 >= 1024) ;si el peso en megabytes es mayor o igual a 1024, entonces:
                            {
                                    PB3 := Round(PB2 / 1024) ;[PESO EN GB]
                                    PB := Round(PB2 / 1024, aditionalcommand) "GB" ;obtener peso en GigaBytes
                            }
                            if (PB3 >= 1024) ;si el peso en gigabytes es mayor o igual a 1024, entonces:
                            {
                                    PB4 := Round(PB3 / 1024) ;[PESO EN TB]
                                    PB := Round(PB3 / 1024, aditionalcommand) "TB" ;obtener peso en TeraBytes
                            }
                            if (PB4 >= 1024) ;si el peso en terabytes es mayor o igual a 1024, entonces:
                            {
                                    PB5 := Round(PB4 / 1024) ;[PESO EN PB]
                                    PB := Round(PB4 / 1024, aditionalcommand) "TB" ;obtener peso en PetaBytes
                            }
                            if (PB5 >= 1024) ;si el peso en petabytes es mayor o igual a 1024, entonces:
                            {
                                    PB6 := Round(PB5 / 1024) ;[PESO EN EB]
                                    PB := Round(PB5 / 1024, aditionalcommand) "EB" ;obtener peso en ExaBytes
                            }
                            if (PB6 >= 1024) ;si el peso en exabytes es mayor o igual a 1024, entonces:
                            {
                                    PB7 := Round(PB6 / 1024) ;[PESO EN ZB]
                                    PB := Round(PB6 / 1024, aditionalcommand) "ZB" ;obtener peso en ZettaBytes
                            }
                            if (PB7 >= 1024) ;si el peso en exabytes es mayor o igual a 1024, entonces:
                            {
                                    PB8 := Round(PB7 / 1024) ;[PESO EN YB]
                                    PB := Round(PB7 / 1024, aditionalcommand) "YB" ;obtener peso en YottaBytes
                            }
                    }
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "Auto")  ;devuelve el resultado según sea más conveniente
                    return, PB
     
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "N") ;devuelve el resultado en N
                    if (Round(PN, aditionalcommand) <= 0) ;si el resultado es "0", devuelve el resultado entero sin redondear
                            return PN " Nibbles"
                    else
                            return, Round(PN, aditionalcommand) " Nibbles"
                   
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "KB") ;devuelve el resultado en KB
                    if (Round(PKB, aditionalcommand) <= 0) ;si el resultado es "0", devuelve el resultado entero sin redondear
                            return PKB "KB"
                    else
                            return, Round(PKB, aditionalcommand) "KB"
           
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "MB") ;devuelve el resultado en MB
                    if (Round(PMB, aditionalcommand) <= 0)
                            return PMB "MB"
                    else
                            return, Round(PMB, aditionalcommand) "MB"
           
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "GB") ;devuelve el resultado en GB
                    if (Round(PGB, aditionalcommand) <= 0)
                            return PGB "GB"
                    else
                            return, Round(PGB, aditionalcommand) "GB"
           
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "TB") ;devuelve el resultado en TB
                    if (Round(PTB, aditionalcommand) <= 0)
                            return PTB "TB"
                    else
                            return, Round(PTB, aditionalcommand) "TB"
     
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "PB") ;devuelve el resultado en PB
                    if (Round(PPB, aditionalcommand) <= 0)
                            return PPB "PB"
                    else
                            return, Round(PPB, aditionalcommand) "PB"
                   
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "EB") ;devuelve el resultado en EB
                    if (Round(PEB, aditionalcommand) <= 0)
                            return PEB "EB"
                    else
                            return, Round(PEB, aditionalcommand) "EB"
                   
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "ZB") ;devuelve el resultado en ZB
                    if (Round(PZB, aditionalcommand) <= 0)
                            return PZB "ZB"
                    else
                            return, Round(PZB, aditionalcommand) "ZB"
                   
            if (countoroptionsorkeys = "" OR countoroptionsorkeys = "YB") ;devuelve el resultado en YB
                    if (Round(PYB, aditionalcommand) <= 0)
                            return PYB "YB"
                    else
                            return, Round(PYB, aditionalcommand) "YB"
    }
     
     
     
     
     
     
     
     
    IsFile(subcomandname:=""){
            FileGetAttrib, Attributes_Check, % subcomandname
            If (!InStr(Attributes_Check,"D"))
                    return 1 ;es archivo
            If (InStr(Attributes_Check,"D"))
                    return 0 ;es carpeta
    }      
    IsFolder(subcomandname:=""){
            FileGetAttrib, Attributes_Check, % subcomandname
            If (!InStr(Attributes_Check,"D"))
                    return 0
            If (InStr(Attributes_Check,"D"))
                    return 1
    }

